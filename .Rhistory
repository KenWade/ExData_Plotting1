get_KOMs(my_id, stoken)
get_basic('https://strava.com/api/v3/athlete', stoken)
get_efforts_list(stoken, id = my_id)
x <- get_efforts_list(stoken, id = my_id)
head(x)
x$athlete$id
x[[1]]$athlete$id
length(x)
for (i in 1:length(x)) {}
y = NULL
for (i in 1:length(x)) {
y[i] <- x[[i]]$athlete$id
}
y
my_id in y
y == my_id
sum(y)
sum(as.numeric(y))
my_id %in% y
x <- get_efforts_list(stoken, id = 1294941)
y = NULL
for (i in 1:length(x)) {
y[i] <- x[[i]]$athlete$id
}
my_id %in% y
z <-get_segment(stoken, id=my_id, request="all_efforts")
z <-get_segment(stoken, id=10550853396, request="all_efforts")
z <-get_segment(stoken, id=10550853396, request="all_efforts")
z <-get_segment(stoken, id=438918416, request="all_efforts")
plot?
?plot
colors()
x <- rnorm(100)
hist(x)
x <- rnorm(100000)
hist(x)
x <- rnorm(100)
y <- rnorm(100)
plot(x,y)
z <- rnorm(100)
plot(x,z)
plot(x,y)
par(mar = c(2,2,2,2))
plot(x,y)
par(mar = c(4,4,2,2))
plot(x,y)
plot(x,y, pch=20)
plot(x,y, pch=2)
plot(x,y, pch=3)
example(points())
example(points
)
x <- rnorm(100)
y <- rnorm(100)
plot(x,y, pch=3)
title("ScatterPlot")
text(-2.-2, "a;lsdkfj")
text(-2.-2, "alsdkfj")
text(-2.-2, "a")
plot(x,y, pch=3)
title("ScatterPlot")
text(-2,-2, "a")
legend("topleft", legend = "Data")
legend("topleft", legend = "Data", pch = 20)
fit <- lm(y~x)
abline(fit)
abline(fit, lwd=3)
abline(fit, lwd=3, col = "blue")
plot(x,y, pch=3, xlab = "Weight", ylab = "Height", main = "Scatter Plot")
legend("topright", legend = "Data", pch = 20)
abline(fit, lwd=3, col = "salmon")
z <-rpois(100,2)
par(mfrow=c(2,1))
plot(x,y)
plot(x,z)
par("mar")
par("mar"=c(2,2,1,1))
plot(x,y)
plot(x,z)
par(mfrow=c(2,1))
plot(x,y)
plot(x,z)
par(mfrow=c(1,2))
plot(x,y)
plot(x,z)
par(mfrow=c(2,2))
plot(x,y)
plot(x,z)
plot(y,z)
plot(z,x)
par(mfrow=c(1,1))
y = x+rnorm(100)
g = gl(2,50)
g = gl(2,50, lables = c("Male", "Female"00))
g = gl(2,50, lables = c("Male", "Female"))
g = gl(2,50, labels  = c("Male", "Female"))
plot(x,y)
par("mar" = c(4,4,2,2))
plot(x,y)
str(g)
plot(x,y, type="n")
points(x[g=="Male"])
points(x[g=="Male"], col="green")
x[g=="Female"]
x[g=="Male"]
points(x[g=="Male"], y[g=="Male", col="green")
points(x[g=="Male"], y[g=="Male"], col="green")
points(x[g=="Female"], y[g=="Female"], col="steel")
points(x[g=="Female"], y[g=="Female"], col="bluesteel")
colors()
points(x[g=="Female"], y[g=="Female"], col="steelblue")
points(x[g=="Female"], y[g=="Female"], col="steelblue", pch=19)
####
#
#   Exploratory Data Analysis (class.coursera.org/exdata-035)
#
#   Making Plots
#
#       Our overall goal here is simply to examine how household energy usage varies over a 2-day period in
#       February, 2007. Your task is to reconstruct the following plots below, all of which were constructed using
#       the base plotting system.
#
####
#
#   Setup Libraries
#
library(lubridate)
hpc_filename   <- "household_power_consumption.txt"
hpc_colClasses <- c("character",  "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric")
hpc_nastrings  <- "?"
minDate <- as.Date("2007-02-01", "%Y-%m-%d")
maxDate <- as.Date("2007-02-02", "%Y-%m-%d")
####
#
#    Read in the Electric power consumption data from the working directory
#
#        Find the size of the data frame object and consider the implecations...
#
#           Input file size:        129,845KB = 132961280 bytes ~ 130MB
#           Data Frame dimensions:  2075259 obs. of  9 variables
#           Data Frame object.size: 83644688 bytes ~ 80MB
#               7.118858684894539 bytes per variable per observation in the data file
#               4.478406898715882 bytes per variable per observation in the data frame
#
# Data daken from UCI Machine Learning Repository: https://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption
#
# Downloaded from: https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip
epcFull <- read.table(hpc_filename, header=TRUE, sep=";", colClasses = hpc_colClasses, na.strings = hpc_nastrings)
objectsize = object.size(epcFull)
####
#
#   Convert date and time to R date and time classes and
#   Convert all other variables to numbers
#
epcFull$DateTime <- strptime(paste(epcFull$Date, epcFull$Time, sep = " "), "%d/%m/%Y %H:%M:%S")
####
#
#   Select only the dates of interest
#
epc <- epcFull[(as.Date(epcFull$DateTime) >= minDate) & (as.Date(epcFull$DateTime) <= maxDate), ]
####
#
#   Exploratory Data Analysis (class.coursera.org/exdata-035)
#
#   Making Plots
#
#       Our overall goal here is simply to examine how household energy usage varies over a 2-day period in
#       February, 2007. Your task is to reconstruct the following plots below, all of which were constructed using
#       the base plotting system.
#
####
#
#   Setup Libraries
#
library(lubridate)
####
#
#    Read in the Electric power consumption data from the working directory
#
#       As an side detail suggusted in the project description...
#           find the size of the data frame object and consider the implecations.
#
#               Input file size:        132,960,755 bytes ~ 130MB
#               Data Frame object.size: 149,581,752 bytes ~ 142MB
#               Data Frame dimensions:  2075259 obs. of  9 variables
#                   7.12 bytes per variable per observation in the data file
#                   8.00 bytes per variable per observation in the data frame
#
# Data daken from UCI Machine Learning Repository: https://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption
#
# Downloaded from: https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip
get_household_power_consumption_data <- function() {
hpc_filename   <- "household_power_consumption.txt"
hpc_colClasses <- c("character",  "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric")
hpc_nastrings  <- "?"
minDate <- as.Date("2007-02-01", "%Y-%m-%d")
maxDate <- as.Date("2007-02-02", "%Y-%m-%d")
epcFull <- read.table(hpc_filename, header=TRUE, sep=";", colClasses = hpc_colClasses, na.strings = hpc_nastrings)
hpc_filesize   <- file.size(hpc_filename)
hpc_objectsize <- object.size(epcFull)
bytes_per_variable_per_observation_in_datafile <- hpc_filesize / ncol(epcFull) / nrow(epcFull)
bytes_per_variable_per_observation_in_object   <- hpc_objectsize / ncol(epcFull) / nrow(epcFull)
####
#
#   Convert date and time to R date and time classes and
#
epcFull$DateTime <- strptime(paste(epcFull$Date, epcFull$Time, sep = " "), "%d/%m/%Y %H:%M:%S")
####
#
#   Select only the dates of interest
#
epc <- subset(epcFull, (as.Date(epcFull$DateTime) >= minDate) & (as.Date(epcFull$DateTime) <= maxDate))
return(epc)
}
#######################################################################
#
# Make Plot1
#
#######################################################################
epc <- get_household_power_consumption_data()
png(filename = "plot1.png", width = 480, height = 480, units = "px")
hist(epc$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red", breaks = 12)
dev.off()
setwd("~/Ken/Continuing Education/Johns Hopkins School of Public Health - Data Science 4 - Exploratory Data Analysis/ExData_Plotting1")
####
#
#   plot1.R
#
#   Exploratory Data Analysis (class.coursera.org/exdata-035)
#
#   Making Plots
#
#       Our overall goal here is simply to examine how household energy usage varies over a 2-day period in
#       February, 2007. Your task is to reconstruct the following plots below, all of which were constructed using
#       the base plotting system.
#
####
#
#   Setup Libraries
#
library(lubridate)
####
#
#    Read in the Electric power consumption data from the working directory
#
#       As a side detail suggusted in the project description...
#           find the size of the data frame object and consider the implecations.
#
#               Input file size:        132,960,755 bytes ~ 130MB
#               Data Frame object.size: 149,581,752 bytes ~ 142MB
#               Data Frame dimensions:  2075259 obs. of  9 variables
#                   7.12 bytes per variable per observation in the data file
#                   8.00 bytes per variable per observation in the data frame
#
# Data daken from UCI Machine Learning Repository:
#                   https://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption
#
# Downloaded from: https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip
get_household_power_consumption_data <- function() {
hpc_filename   <- "household_power_consumption.txt"
hpc_colClasses <- c("character",  "character", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric")
hpc_nastrings  <- "?"
minDate <- as.Date("2007-02-01", "%Y-%m-%d")
maxDate <- as.Date("2007-02-02", "%Y-%m-%d")
epcFull <- read.table(hpc_filename, header=TRUE, sep=";", colClasses = hpc_colClasses, na.strings = hpc_nastrings)
hpc_filesize   <- file.size(hpc_filename)
hpc_objectsize <- object.size(epcFull)
bytes_per_variable_per_observation_in_datafile <- hpc_filesize / ncol(epcFull) / nrow(epcFull)
bytes_per_variable_per_observation_in_object   <- hpc_objectsize / ncol(epcFull) / nrow(epcFull)
####
#
#   Convert date and time to R date and time classes and
#
epcFull$datetime <- strptime(paste(epcFull$Date, epcFull$Time, sep = " "), "%d/%m/%Y %H:%M:%S")
####
#
#   Select only the dates of interest
#
epc <- subset(epcFull, (as.Date(epcFull$datetime) >= minDate) & (as.Date(epcFull$datetime) <= maxDate))
return(epc)
}
#######################################################################
#
# Make Plot1
#
#######################################################################
epc <- get_household_power_consumption_data()
png(filename = "plot1.png", width = 480, height = 480, units = "px")
hist(epc$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)",
col = "red", breaks = 12)
dev.off()
####
#
#   plot2.R
#
#   Exploratory Data Analysis (class.coursera.org/exdata-035)
#
#   Making Plots
#
#       Our overall goal here is simply to examine how household energy usage varies over a 2-day period in
#       February, 2007. Your task is to reconstruct the following plots below, all of which were constructed using
#       the base plotting system.
#
####
#
#   Setup Libraries
#
library(lubridate)
####
#
#    Read in the Electric power consumption data from the working directory
#
#       As a side detail suggusted in the project description...
#           find the size of the data frame object and consider the implecations.
#
#               Input file size:        132,960,755 bytes ~ 130MB
#               Data Frame object.size: 149,581,752 bytes ~ 142MB
#               Data Frame dimensions:  2075259 obs. of  9 variables
#                   7.12 bytes per variable per observation in the data file
#                   8.00 bytes per variable per observation in the data frame
#
# Data daken from UCI Machine Learning Repository:
#                   https://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption
#
# Downloaded from: https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip
get_household_power_consumption_data <- function() {
hpc_filename   <- "household_power_consumption.txt"
hpc_colClasses <- c("character",  "character", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric")
hpc_nastrings  <- "?"
minDate <- as.Date("2007-02-01", "%Y-%m-%d")
maxDate <- as.Date("2007-02-02", "%Y-%m-%d")
epcFull <- read.table(hpc_filename, header=TRUE, sep=";", colClasses = hpc_colClasses, na.strings = hpc_nastrings)
hpc_filesize   <- file.size(hpc_filename)
hpc_objectsize <- object.size(epcFull)
bytes_per_variable_per_observation_in_datafile <- hpc_filesize / ncol(epcFull) / nrow(epcFull)
bytes_per_variable_per_observation_in_object   <- hpc_objectsize / ncol(epcFull) / nrow(epcFull)
####
#
#   Convert date and time to R date and time classes and
#
epcFull$datetime <- strptime(paste(epcFull$Date, epcFull$Time, sep = " "), "%d/%m/%Y %H:%M:%S")
####
#
#   Select only the dates of interest
#
epc <- subset(epcFull, (as.Date(epcFull$datetime) >= minDate) & (as.Date(epcFull$datetime) <= maxDate))
return(epc)
}
#######################################################################
#
# Make Plot2
#
#######################################################################
epc <- get_household_power_consumption_data()
png(filename = "plot2.png", width = 480, height = 480, units = "px")
plot(epc$datetime, epc$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)",
type = "l", col = "black", lwd = 1)
dev.off()
####
#
#   plot3.R
#
#   Exploratory Data Analysis (class.coursera.org/exdata-035)
#
#   Making Plots
#
#       Our overall goal here is simply to examine how household energy usage varies over a 2-day period in
#       February, 2007. Your task is to reconstruct the following plots below, all of which were constructed using
#       the base plotting system.
#
####
#
#   Setup Libraries
#
library(lubridate)
####
#
#    Read in the Electric power consumption data from the working directory
#
#       As a side detail suggusted in the project description...
#           find the size of the data frame object and consider the implecations.
#
#               Input file size:        132,960,755 bytes ~ 130MB
#               Data Frame object.size: 149,581,752 bytes ~ 142MB
#               Data Frame dimensions:  2075259 obs. of  9 variables
#                   7.12 bytes per variable per observation in the data file
#                   8.00 bytes per variable per observation in the data frame
#
# Data daken from UCI Machine Learning Repository:
#                   https://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption
#
# Downloaded from: https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip
get_household_power_consumption_data <- function() {
hpc_filename   <- "household_power_consumption.txt"
hpc_colClasses <- c("character",  "character", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric")
hpc_nastrings  <- "?"
minDate <- as.Date("2007-02-01", "%Y-%m-%d")
maxDate <- as.Date("2007-02-02", "%Y-%m-%d")
epcFull <- read.table(hpc_filename, header=TRUE, sep=";", colClasses = hpc_colClasses, na.strings = hpc_nastrings)
hpc_filesize   <- file.size(hpc_filename)
hpc_objectsize <- object.size(epcFull)
bytes_per_variable_per_observation_in_datafile <- hpc_filesize / ncol(epcFull) / nrow(epcFull)
bytes_per_variable_per_observation_in_object   <- hpc_objectsize / ncol(epcFull) / nrow(epcFull)
####
#
#   Convert date and time to R date and time classes and
#
epcFull$datetime <- strptime(paste(epcFull$Date, epcFull$Time, sep = " "), "%d/%m/%Y %H:%M:%S")
####
#
#   Select only the dates of interest
#
epc <- subset(epcFull, (as.Date(epcFull$datetime) >= minDate) & (as.Date(epcFull$datetime) <= maxDate))
return(epc)
}
#######################################################################
#
# Make Plot3
#
#######################################################################
epc <- get_household_power_consumption_data()
png(filename = "plot3.png", width = 480, height = 480, units = "px")
plot(epc$datetime,  epc$Sub_metering_1, type = "l", col = "black", lwd = 1, xlab = "", ylab = "Energy sub metering")
lines(epc$datetime, epc$Sub_metering_2, type = "l", col = "red",   lwd = 1)
lines(epc$datetime, epc$Sub_metering_3, type = "l", col = "blue",  lwd = 1)
legend("topright", lty=c(1,1, 1), lwd=c(1, 1, 1), col=c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
####
#
#   plot4.R
#
#   Exploratory Data Analysis (class.coursera.org/exdata-035)
#
#   Making Plots
#
#       Our overall goal here is simply to examine how household energy usage varies over a 2-day period in
#       February, 2007. Your task is to reconstruct the following plots below, all of which were constructed using
#       the base plotting system.
#
####
#
#   Setup Libraries
#
library(lubridate)
####
#
#    Read in the Electric power consumption data from the working directory
#
#       As a side detail suggusted in the project description...
#           find the size of the data frame object and consider the implecations.
#
#               Input file size:        132,960,755 bytes ~ 130MB
#               Data Frame object.size: 149,581,752 bytes ~ 142MB
#               Data Frame dimensions:  2075259 obs. of  9 variables
#                   7.12 bytes per variable per observation in the data file
#                   8.00 bytes per variable per observation in the data frame
#
# Data daken from UCI Machine Learning Repository:
#                   https://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption
#
# Downloaded from: https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip
get_household_power_consumption_data <- function() {
hpc_filename   <- "household_power_consumption.txt"
hpc_colClasses <- c("character",  "character", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric")
hpc_nastrings  <- "?"
minDate <- as.Date("2007-02-01", "%Y-%m-%d")
maxDate <- as.Date("2007-02-02", "%Y-%m-%d")
epcFull <- read.table(hpc_filename, header=TRUE, sep=";", colClasses = hpc_colClasses, na.strings = hpc_nastrings)
hpc_filesize   <- file.size(hpc_filename)
hpc_objectsize <- object.size(epcFull)
bytes_per_variable_per_observation_in_datafile <- hpc_filesize / ncol(epcFull) / nrow(epcFull)
bytes_per_variable_per_observation_in_object   <- hpc_objectsize / ncol(epcFull) / nrow(epcFull)
####
#
#   Convert date and time to R date and time classes and
#
epcFull$datetime <- strptime(paste(epcFull$Date, epcFull$Time, sep = " "), "%d/%m/%Y %H:%M:%S")
####
#
#   Select only the dates of interest
#
epc <- subset(epcFull, (as.Date(epcFull$datetime) >= minDate) & (as.Date(epcFull$datetime) <= maxDate))
return(epc)
}
#######################################################################
#
# Make Plot4
#
#######################################################################
epc <- get_household_power_consumption_data()
png(filename = "plot4.png", width = 480, height = 480, units = "px")
par(mfrow = c(2, 2), mar = c(4, 4, 2, 2))
with (epc, {
# 1
plot(datetime, Global_active_power, type = "l", col = "black", lwd = 1, xlab = "", ylab = "Global Active Power")
# 2
plot(datetime, Voltage, type = "l", col = "black", lwd = 1)
# 3
plot(datetime,  Sub_metering_1, type = "l", col = "black", lwd = 1, xlab = "", ylab = "Energy sub metering")
lines(datetime, Sub_metering_2, type = "l", col = "red",   lwd = 1)
lines(datetime, Sub_metering_3, type = "l", col = "blue",  lwd = 1)
legend("topright", lty=c(1,1, 1), lwd=c(1, 1, 1), col=c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n")
# 4
plot(datetime, Global_reactive_power, type = "l", col = "black", lwd = 1)
})
dev.off()
